// <auto-generated />
using System;
using ForexExchangeMonitoring.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ForexExchangeMonitoring.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ForexCurrencyModelDbContext))]
    [Migration("20211106090600_CurrencyModelForeignKey")]
    partial class CurrencyModelForeignKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ForexExchangeMonitoring.Domain.Models.CurrencyModel", b =>
                {
                    b.Property<int>("CurrencyModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyModelId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ForexExchangeMonitoring.Domain.Models.ForexCurrencyModel", b =>
                {
                    b.Property<int>("ForexCurrencyModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CurrencyModel")
                        .HasColumnType("int");

                    b.Property<string>("ExchangeRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastRefreshedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ForexCurrencyModelId");

                    b.HasIndex("CurrencyModel");

                    b.ToTable("RealTimeCurrencyExchangeRates");
                });

            modelBuilder.Entity("ForexExchangeMonitoring.Domain.Models.ForexCurrencyModel", b =>
                {
                    b.HasOne("ForexExchangeMonitoring.Domain.Models.CurrencyModel", "currencyModelId")
                        .WithMany()
                        .HasForeignKey("CurrencyModel");

                    b.Navigation("currencyModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
